{
  "fileName": "tag_store.py",
  "filePath": "weave/language_features/tagging/tag_store.py",
  "url": "https://github.com/wandb/weave/weave/language_features/tagging/tag_store.py",
  "summary": "This file contains the data structures and methods used to manage the in-memory state of tagged objects in the Weave project. The file relies on two private global objects: `_OBJ_TAGS_MEM_MAP` and `_VISITED_OBJ_IDS`. `_OBJ_TAGS_MEM_MAP` is used to map the Python ID of an object to a dictionary of tags, which is used to store the tags for an object. `_VISITED_OBJ_IDS` is used to keep track of the Python IDs of objects that are currently being visited. This is used to prevent infinite recursion when determining the type of tagged objects.\n\nThe primary user-facing functions are `add_tags` and `find_tag`. `add_tags` is used to add tags to an object, while `find_tag` is used to recursively lookup the tag for a given object. \n\n`add_tags` takes an object, a dictionary of tags, and an optional boolean flag to give precedence to existing tags. It returns the object with the added tags. `find_tag` takes an object, a key, and an optional tag type, and returns the tag associated with the key for the given object. \n\nThe file also includes several context managers, including `set_curr_node`, `isolated_tagging_context`, `new_tagging_context`, and `with_visited_obj`. These context managers are used to create isolated tagging contexts, set the current node with optionally merged in parent tags, create a new tagging context, and indicate that an object is being visited, respectively. \n\nOverall, this file provides the necessary data structures and methods to manage the in-memory state of tagged objects in the Weave project.",
  "questions": "1. What is the purpose of the `_VISITED_OBJ_IDS` global object?\n    \n    `_VISITED_OBJ_IDS` is used to keep track of the python ids of objects that are currently being visited. This is used to prevent infinite recursion when determining the type of tagged objects.\n    \n2. What is the purpose of the `set_curr_node` function?\n    \n    `set_curr_node` sets the current node with optionally merged in parent tags. This is used to create a new node with a given id and parent ids, and to merge the tags of the parent nodes into the new node.\n    \n3. What is the purpose of the `with_visited_obj` context manager?\n    \n    `with_visited_obj` is used to indicate that an object is being visited, and adds the object's id to the `_VISITED_OBJ_IDS` set. This is primarily used by the `TaggedValueType::type_of_instance` method to prevent infinite recursion when determining the type of tagged objects."
}