{
  "fileName": "wandb_api.py",
  "filePath": "weave/wandb_api.py",
  "url": "https://github.com/wandb/weave/weave/wandb_api.py",
  "summary": "This file provides an official interface for interacting with the W&B API, and all interactions with the Weave API should go through this module. The module contains two classes, `WandbApiAsync` and `WandbApi`, which provide methods for querying the W&B API. \n\nThe `WandbApiAsync` class provides an asynchronous interface for querying the W&B API, while the `WandbApi` class provides a synchronous interface. Both classes have a `query` method that takes a GraphQL query and returns the result of executing the query against the W&B API. \n\nThe `WandbApiAsync` class also has a `server_info` method that returns information about the W&B server, and an `artifact_manifest_url` method that returns the direct URL of the current manifest file for a given artifact. \n\nThe `WandbApi` class has equivalent methods for `server_info` and `artifact_manifest_url`, but they are synchronous. \n\nThe module also defines a `WandbApiContext` dataclass that represents the context for a W&B API request. The context includes the user ID, API key, headers, and cookies for the request. The module provides methods for setting and resetting the W&B API context, as well as a context manager for temporarily setting the context. \n\nThe module uses the `gql` library to execute GraphQL queries against the W&B API. It also uses the `aiohttp` library to provide an asynchronous interface for querying the API. \n\nOverall, this module provides a convenient and consistent interface for interacting with the W&B API in the larger Weave project. \n\nExample usage:\n\n```\nfrom weave import wandb_api\n\n# Set the W&B API context\nwandb_api.set_wandb_api_context(user_id=\"my_user_id\", api_key=\"my_api_key\")\n\n# Query the W&B API\nquery = \"\"\"\n    query {\n        project(name: \"my_project\") {\n            runs {\n                id\n                name\n            }\n        }\n    }\n\"\"\"\nresult = wandb_api.WandbApi().query(query)\n\n# Get the direct URL of the current manifest file for an artifact\nurl = await wandb_api.get_wandb_api().artifact_manifest_url(entity_name=\"my_entity\", project_name=\"my_project\", name=\"my_artifact\")\n```",
  "questions": "1. What is the purpose of this module and what does it do?\n- This module is the official interface for interacting with the W&B API, and all interactions with the Weave API should go through it.\n2. What is the purpose of the `WandbApiContext` class and how is it used?\n- The `WandbApiContext` class is used to store information about the user's API key, headers, and cookies. It is used to set the API context for the W&B library.\n3. What is the purpose of the `WandbApi` and `WandbApiAsync` classes and how do they differ?\n- The `WandbApi` and `WandbApiAsync` classes are used to query the W&B API. The `WandbApi` class is used for synchronous queries, while the `WandbApiAsync` class is used for asynchronous queries."
}