{
  "fileName": "util.ts",
  "filePath": "weave-js/src/components/PagePanelComponents/util.ts",
  "url": "https://github.com/wandb/weave/weave-js/src/components/PagePanelComponents/util.ts",
  "summary": "The `weave` module provides various utility functions and types for the larger project. \n\nThe `getConfig` function is imported from the `config` module located in the parent directory. It is used to retrieve the configuration settings for the project. \n\nThe `getCookie` function is imported from the `@wandb/weave/common/util/cookie` module. It is used to retrieve the value of a cookie with a given name. \n\nThe `NodeOrVoidNode`, `Type`, `isAssignableTo` types are imported from the `@wandb/weave/core` module. They are used to define types and check if a given type is assignable to another type. \n\nThe `fetch` function is imported from the `isomorphic-unfetch` module. It is used to make HTTP requests. \n\nThe `useEffect` and `useState` hooks are imported from the `react` module. They are used to manage state and side effects in React components. \n\nThe `REMOTE_URI_PREFIX` and `LOCAL_URI_PREFIX` constants are defined as strings. They are used to identify whether a given URI is a remote or local artifact. \n\nThe `isRemoteURI` and `isLocalURI` functions are defined to check if a given URI is a remote or local artifact. \n\nThe `BranchPointType` type is defined to represent a branch point in the artifact history. It contains the commit hash, number of commits, and original URI of the artifact. \n\nThe `inJupyterCell` function is defined to check if the code is running in a Jupyter notebook cell. \n\nThe `btoa` function is declared to encode a string in base64. \n\nThe `useIsAuthenticated` function is defined to check if the user is authenticated. It makes a POST request to the backend with the anonymous API key and sets the `isAuth` state accordingly. \n\nThe `isServedLocally` function is defined to check if the code is being served locally. \n\nThe `uriFromNode` function is defined to extract the URI from a given node. \n\nThe `branchPointIsRemote` function is defined to check if the branch point is a remote artifact. \n\nThe `weaveTypeIsPanel` and `weaveTypeIsPanelGroup` functions are defined to check if a given weave type is a panel or panel group. \n\nThe `toArtifactSafeName` function is defined to replace any non-alphanumeric characters in a string with underscores. \n\nThe `entityNameFromRemoteURI` function is defined to extract the entity and project names from a remote URI. \n\nThe `determineURISource` function is defined to determine the source of the URI (entity and project names) based on the URI and branch point. \n\nThe `determineURIIdentifier` function is defined to determine the name and version of the artifact based on the URI. \n\nThe `getPathFromURI` function is defined to extract the path from a given URI. \n\nOverall, this module provides various utility functions and types that are used throughout the larger project to manage artifacts and check user authentication.",
  "questions": "1. What is the purpose of the `useIsAuthenticated` function?\n- The `useIsAuthenticated` function is used to check if the user is authenticated by making a POST request to the backendWeaveViewerUrl and setting the state of `isAuth` accordingly.\n\n2. What is the purpose of the `determineURISource` function?\n- The `determineURISource` function is used to determine the entity and project name from a remote URI.\n\n3. What is the purpose of the `weaveTypeIsPanelGroup` function?\n- The `weaveTypeIsPanelGroup` function is used to check if a given weaveType is assignable to a `Group` type."
}