{
  "fileName": "util.ts",
  "filePath": "weave-js/src/components/Panel2/PanelProjectionConverter/util.ts",
  "url": "https://github.com/wandb/weave/weave-js/src/components/Panel2/PanelProjectionConverter/util.ts",
  "summary": "The `weave` project includes a file that exports two functions: `getValidColumns` and `processConfig`. \n\nThe `getValidColumns` function takes a `Type` input and returns an object with two properties: `validEmbeddingColumns` and `validNumericColumns`. The function first retrieves the inner type of the input, which is a nullable taggable value of a list object type. If the inner type is assignable to a typed dictionary, the function uses the `allObjPaths` function from the `@wandb/weave/core` library to retrieve all possible paths in the dictionary. It then filters the paths to find those that are assignable to a `maybe(list('number'))` type and those that are assignable to a `maybe('number')` type, and maps the paths to their respective column names. The function returns an object with the two arrays of column names.\n\nThe `processConfig` function takes two inputs: a configuration object and a `Node` object with a generic type `U`. The function first calls `getValidColumns` with the `type` property of the `inputNode` object to retrieve the valid column names. It then sets the `projectionAlgorithm` property of the output object to the `projectionAlgorithm` property of the input configuration object, or to `'pca'` if the property is not defined. It sets the `inputCardinality` property to `'single'` if there is at least one valid embedding column, or to `'multiple'` otherwise, or to the `inputCardinality` property of the input configuration object if it is defined. It sets the `inputColumnNames` property to the `inputColumnNames` property of the input configuration object, or to an empty array if the property is not defined. If the `inputCardinality` is `'single'`, the function checks if the `inputColumnNames` array contains a valid embedding column name, and sets it to an empty array if it does not. If the `inputColumnNames` array is empty and there is at least one valid embedding column, the function sets it to an array containing the first valid embedding column name. If the `inputCardinality` is `'multiple'`, the function checks if the `inputColumnNames` array contains only valid numeric column names, and sets it to an empty array if it does not. If the `inputColumnNames` array is empty and there are valid numeric column names, the function sets it to an array containing all valid numeric column names. Finally, the function sets the `algorithmOptions` property of the output object to an object with properties for the `'pca'`, `'tsne'`, and `'umap'` algorithms, with default values or values from the input configuration object if defined.\n\nThis code is likely used in the larger project to process a configuration object for a panel projection converter, which takes a dataset and projects it onto a two-dimensional plane for visualization. The `getValidColumns` function is used to retrieve the valid column names from the dataset, and the `processConfig` function is used to set the configuration options for the converter based on the input configuration object and the valid column names. An example usage of the `processConfig` function might look like this:\n\n```\nimport { Node } from '@wandb/weave/core';\nimport { processConfig } from 'weave';\n\nconst config = {\n  projectionAlgorithm: 'tsne',\n  inputCardinality: 'single',\n  inputColumnNames: ['embedding'],\n  algorithmOptions: {\n    tsne: {\n      perplexity: 50,\n      learningRate: 5,\n      iterations: 100,\n    },\n  },\n};\n\nconst inputNode: Node<{embedding: number[]}> = {\n  type: {embedding: list('number')},\n  value: {embedding: [1, 2, 3]},\n};\n\nconst panelProjectionConverterConfig = processConfig(config, inputNode);\nconsole.log(panelProjectionConverterConfig);\n// Output: {\n//   projectionAlgorithm: 'tsne',\n//   inputCardinality: 'single',\n//   inputColumnNames: ['embedding'],\n//   algorithmOptions: {\n//     pca: {},\n//     tsne: {\n//       perplexity: 50,\n//       learningRate: 5,\n//       iterations: 100,\n//     },\n//     umap: {\n//       neighbors: 15,\n//       minDist: 0.1,\n//       spread: 1.0,\n//     },\n//   },\n// }\n```",
  "questions": "1. What is the purpose of the `weave` project and how does this code fit into it?\n- This code is a module within the `weave` project, but it is unclear what the overall purpose of the project is.\n\n2. What is the expected input and output of the `getValidColumns` function?\n- The `getValidColumns` function takes in a `Type` object and returns an object with two arrays of strings. It is unclear what these arrays represent or how they are used.\n\n3. What is the purpose of the `processConfig` function and what are the possible values for its input parameters?\n- The `processConfig` function takes in an `any` object and a `Node` object, and returns a `PanelProjectionConverterConfigType` object. It is unclear what the expected structure of the `config` object is or how the returned object is used."
}